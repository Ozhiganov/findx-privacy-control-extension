# Resources to be used as redirect destinations.
#
# - Each distinct resource entry is separated by an empty line.
# - The first line in a resource entry is: token mime-type[;encoding]
# - All following lines are the data. An empty line signals the end of the
#   data.
#
# If the encoding is absent, the data will be converted to base64, and the
# encoding will be set to `;base64`.


hd-main.js application/javascript
var L = (function(){
    var l = {};
    var noopfn = function() {
        ;
    };
    var props = ["pf", "ed", "Qe", "fd", "xh", "Uc", "ef", "zd", "Ad", "Qc", "Ri", "Wc", "Vc", "Xc", "Wg", "rd", "qd", "sd", "Pe", "Id", "Hd", "Jd", "fg", "Fd", "Ed", "Gd", "ek", "Cd", "Bd", "Dd", "Nj", "Sc", "Rc", "Tc", "wg", "xd", "wd", "yd", "fh", "ld", "md", "nd", "Re", "cd", "Pc", "ke", "Yc", "Xg", "jd", "kd", "oh", "ad", "bd", "mi", "gd", "hd", "ae", "dd", "fk", "ij", "ud", "td", "vd", "ig", "od", "pd", "Yd", "$j", "Oc", "bf"];
    for (var i = 0; i < props.length; i++) {
        l[props[i]] = noopfn;
    }
    return l;
})();


# http://probablyprogramming.com/2009/03/15/the-tiniest-gif-ever
handtinytrans.gif image/gif;base64
R0lGODlhAQABAAAAACH5BAEKAAEALAAAAAABAAEAAAICTAEAOw==


fuckadblock.js-3.2.0 application/javascript
(function() {
    var noopfn = function() {
        ;
    };
    //
    var Fab = function() {};
    Fab.prototype._bait = null;
    Fab.prototype._checkBait = noopfn;
    Fab.prototype._creatBait = noopfn;
    Fab.prototype._destroyBait = noopfn;
    Fab.prototype._log = noopfn;
    Fab.prototype._options = null;
    Fab.prototype._stopLoop = noopfn;
    Fab.prototype._var = null;
    Fab.prototype.check = noopfn;
    Fab.prototype.clearEvent = noopfn;
    Fab.prototype.emitEvent = noopfn;
    Fab.prototype.on = function(a, b) {
        if ( !a ) { b(); }
    };
    Fab.prototype.onDetected = noopfn;
    Fab.prototype.onNotDetected = function(a) {
        a();
    };
    Fab.prototype.setOption = noopfn;
    window.FuckAdBlock = Fab;
    //
    window.fuckAdBlock = new Fab();
})();


noopframe text/html
<!DOCTYPE html>
<html>
    <head><title></title></head>
    <body></body>
</html>


# To neutralize GA scripts. The goal is to provide the minimal API
# expected by clients of these scripts so that the end users are able
# to wholly block GA while minimizing risks of page breakage.
# Test cases (need way more):
# - https://github.com/chrisaljoudi/uBlock/issues/119

www.google-analytics.com/ga.js application/javascript
(function() {
    var noopfn = function() {
        ;
    };
    //
    var gaq = function() {
        ;
    };
    gaq.push = function(a) {
        if ( typeof a === 'function' ) {
            a();
        }
    };
    //
    var tracker = function() {};
    tracker._getLinkerUrl = function(a) { return a; };
    //
    var gat = function() {};
    gat._getTrackerByName = function() { return tracker; };
    window._gat = gat;
    //
    (function() {
        var aa = window._gaq || [];
        if ( Array.isArray(aa) ) {
            while ( aa[0] ) {
                gaq.push(aa.shift());
            }
        }
    })();
    window._gaq = gaq;
})();


# Ubiquitous googletagservices.com: not blocked by EasyPrivacy.
# "Tags are tiny bits of website code that let you measure traffic and
# "visitor behavior"
googletagservices.com/gpt.js application/javascript
(function() {
    var noopfn = function() {
        ;
    };
    //
    var gpt = window.googletag || {};
    gpt._vars_ = gpt._vars_ || {};
    gpt.cmd = gpt.cmd || [];
    gpt.getVersion = gpt.getVersion || noopfn;
    //
    window.googletag = gpt;
})();
